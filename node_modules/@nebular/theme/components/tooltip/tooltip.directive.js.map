{"version":3,"file":"tooltip.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/tooltip/tooltip.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { takeWhile } from 'rxjs/operators';\n\nimport {\n  createContainer,\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPosition,\n  NbPositionBuilderService,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilder,\n  patch,\n} from '../cdk';\nimport { NB_DOCUMENT } from '../../theme.options';\nimport { NbTooltipComponent } from './tooltip.component';\n\n/**\n *\n * Tooltip directive for small text/icon hints.\n *\n * ### Installation\n *\n * Import `NbTooltipModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbTooltipModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * @stacked-example(Showcase, tooltip/tooltip-showcase.component)\n *\n * Tooltip can accept a hint text and/or an icon:\n * @stacked-example(With Icon, tooltip/tooltip-with-icon.component)\n *\n * Same way as Popover, tooltip can accept placement position with `nbTooltipPlacement` proprety:\n * @stacked-example(Placements, tooltip/tooltip-placements.component)\n *\n * It is also possible to specify tooltip color using `nbTooltipStatus` property:\n * @stacked-example(Colored Tooltips, tooltip/tooltip-colors.component)\n *\n */\n@Directive({ selector: '[nbTooltip]' })\nexport class NbTooltipDirective implements AfterViewInit, OnDestroy {\n\n  context: Object = {};\n\n  /**\n   * Popover content which will be rendered in NbTooltipComponent.\n   * Available content: template ref, component and any primitive.\n   *\n   */\n  @Input('nbTooltip')\n  content: string;\n  /**\n   * Position will be calculated relatively host element based on the position.\n   * Can be top, right, bottom, left, start or end.\n   */\n  @Input('nbTooltipPlacement')\n  position: NbPosition = NbPosition.TOP;\n  /**\n   * Container position will be changes automatically based on this strategy if container can't fit view port.\n   * Set this property to any falsy value if you want to disable automatically adjustment.\n   * Available values: clockwise, counterclockwise.\n   */\n  @Input('nbTooltipAdjustment')\n  adjustment: NbAdjustment = NbAdjustment.CLOCKWISE;\n\n  /**\n   *\n   * @param {string} icon\n   */\n  @Input('nbTooltipIcon')\n  set icon(icon: string) {\n    this.context = Object.assign(this.context, { icon });\n  }\n\n  /**\n   *\n   * @param {string} status\n   */\n  @Input('nbTooltipStatus')\n  set status(status: string) {\n    this.context = Object.assign(this.context, { status });\n  }\n\n  protected ref: NbOverlayRef;\n  protected container: ComponentRef<any>;\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n  protected triggerStrategy: NbTriggerStrategy;\n  protected alive: boolean = true;\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              private hostRef: ElementRef,\n              private positionBuilder: NbPositionBuilderService,\n              private overlay: NbOverlayService,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngAfterViewInit() {\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    });\n    this.triggerStrategy = this.createTriggerStrategy();\n\n    this.subscribeOnTriggers();\n    this.subscribeOnPositionChange();\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n  }\n\n  show() {\n    this.container = createContainer(this.ref, NbTooltipComponent, {\n      position: this.position,\n      content: this.content,\n      context: this.context,\n      cfr: this.componentFactoryResolver,\n    }, this.componentFactoryResolver);\n  }\n\n  hide() {\n    this.ref.detach();\n  }\n\n  toggle() {\n    if (this.ref && this.ref.hasAttached()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(this.position)\n      .adjustment(this.adjustment)\n      .offset(8);\n  }\n\n  protected createTriggerStrategy(): NbTriggerStrategy {\n    return new NbTriggerStrategyBuilder()\n      .document(this.document)\n      .trigger(NbTrigger.HINT)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.container)\n      .build();\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => patch(this.container, { position }));\n  }\n\n  protected subscribeOnTriggers() {\n    this.triggerStrategy.show$.pipe(takeWhile(() => this.alive)).subscribe(() => this.show());\n    this.triggerStrategy.hide$.pipe(takeWhile(() => this.alive)).subscribe(() => this.hide());\n  }\n}\n"]}