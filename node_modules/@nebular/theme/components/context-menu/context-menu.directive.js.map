{"version":3,"file":"context-menu.directive.js","sourceRoot":"","sources":["../../../../../.ng_build/theme/components/context-menu/context-menu.directive.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  AfterViewInit,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n} from '@angular/core';\nimport { filter, takeWhile } from 'rxjs/operators';\n\nimport {\n  createContainer,\n  NbAdjustableConnectedPositionStrategy,\n  NbAdjustment,\n  NbOverlayRef,\n  NbOverlayService,\n  NbPosition,\n  NbPositionBuilderService,\n  NbTrigger,\n  NbTriggerStrategy,\n  NbTriggerStrategyBuilder,\n  patch,\n} from '../cdk';\nimport { NbContextMenuComponent } from './context-menu.component';\nimport { NbMenuItem, NbMenuService } from '../menu/menu.service';\nimport { NB_DOCUMENT } from '../../theme.options';\n\n/**\n * Full featured context menu directive.\n *\n * @stacked-example(Showcase, context-menu/context-menu-showcase.component)\n *\n * Just pass menu items array:\n *\n * ```html\n * <button [nbContextMenu]=\"items\"></button>\n * ...\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * ### Installation\n *\n * Import `NbContextMenuModule` to your feature module.\n * ```ts\n * @NgModule({\n *   imports: [\n *   \t// ...\n *     NbContextMenuModule,\n *   ],\n * })\n * export class PageModule { }\n * ```\n * ### Usage\n *\n * If you want to handle context menu clicks you have to pass `nbContextMenuTag`\n * param and register to events using NbMenuService.\n * `NbContextMenu` renders plain `NbMenu` inside, so\n * you have to work with it just like with `NbMenu` component:\n *\n * @stacked-example(Menu item click, context-menu/context-menu-click.component)\n *\n * Context menu has different placements, such as: top, bottom, left and right\n * which can be used as following:\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuPlacement=\"right\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n *\n * By default context menu will try to adjust itself to maximally fit viewport\n * and provide the best user experience. It will try to change position of the context menu.\n * If you wanna disable this behaviour just set it falsy value.\n *\n * ```html\n * <button [nbContextMenu]=\"items\" nbContextMenuAdjustment=\"counterclockwise\"></button>\n * ```\n *\n * ```ts\n * items = [{ title: 'Profile' }, { title: 'Log out' }];\n * ```\n * */\n@Directive({ selector: '[nbContextMenu]' })\nexport class NbContextMenuDirective implements AfterViewInit, OnDestroy {\n\n  /**\n   * Position will be calculated relatively host element based on the position.\n   * Can be top, right, bottom and left.\n   * */\n  @Input('nbContextMenuPlacement')\n  position: NbPosition = NbPosition.BOTTOM;\n\n  /**\n   * Container position will be changes automatically based on this strategy if container can't fit view port.\n   * Set this property to any falsy value if you want to disable automatically adjustment.\n   * Available values: clockwise, counterclockwise.\n   * */\n  @Input('nbContextMenuAdjustment')\n  adjustment: NbAdjustment = NbAdjustment.CLOCKWISE;\n\n  /**\n   * Set NbMenu tag, which helps identify menu when working with NbMenuService.\n   * */\n  @Input('nbContextMenuTag')\n  tag: string;\n\n  /**\n   * Basic menu items, will be passed to the internal NbMenuComponent.\n   * */\n  @Input('nbContextMenu')\n  set setItems(items: NbMenuItem[]) {\n    this.validateItems(items);\n    this.items = items;\n  };\n\n  protected ref: NbOverlayRef;\n  protected container: ComponentRef<any>;\n  protected positionStrategy: NbAdjustableConnectedPositionStrategy;\n  protected triggerStrategy: NbTriggerStrategy;\n  protected alive: boolean = true;\n  private items: NbMenuItem[] = [];\n\n  constructor(@Inject(NB_DOCUMENT) protected document,\n              private menuService: NbMenuService,\n              private hostRef: ElementRef,\n              private positionBuilder: NbPositionBuilderService,\n              private overlay: NbOverlayService,\n              private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  ngAfterViewInit() {\n    this.positionStrategy = this.createPositionStrategy();\n    this.ref = this.overlay.create({\n      positionStrategy: this.positionStrategy,\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n    });\n    this.triggerStrategy = this.createTriggerStrategy();\n\n    this.subscribeOnTriggers();\n    this.subscribeOnPositionChange();\n    this.subscribeOnItemClick();\n  }\n\n  ngOnDestroy() {\n    this.alive = false;\n    this.hide();\n  }\n\n  show() {\n    this.container = createContainer(this.ref, NbContextMenuComponent, {\n      position: this.position,\n      items: this.items,\n      tag: this.tag,\n    }, this.componentFactoryResolver);\n  }\n\n  hide() {\n    this.ref.detach();\n    this.container = null;\n  }\n\n  toggle() {\n    if (this.ref && this.ref.hasAttached()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n\n  protected createPositionStrategy(): NbAdjustableConnectedPositionStrategy {\n    return this.positionBuilder\n      .connectedTo(this.hostRef)\n      .position(this.position)\n      .adjustment(this.adjustment);\n  }\n\n  protected createTriggerStrategy(): NbTriggerStrategy {\n    return new NbTriggerStrategyBuilder()\n      .document(this.document)\n      .trigger(NbTrigger.CLICK)\n      .host(this.hostRef.nativeElement)\n      .container(() => this.container)\n      .build();\n  }\n\n  protected subscribeOnPositionChange() {\n    this.positionStrategy.positionChange\n      .pipe(takeWhile(() => this.alive))\n      .subscribe((position: NbPosition) => patch(this.container, { position }));\n  }\n\n  protected subscribeOnTriggers() {\n    this.triggerStrategy.show$.pipe(takeWhile(() => this.alive)).subscribe(() => this.show());\n    this.triggerStrategy.hide$.pipe(takeWhile(() => this.alive)).subscribe(() => this.hide());\n  }\n\n  /*\n   * NbMenuComponent will crash if don't pass menu items to it.\n   * So, we just validating them and throw custom obvious error.\n   * */\n  private validateItems(items: NbMenuItem[]) {\n    if (!items || !items.length) {\n      throw Error(`List of menu items expected, but given: ${items}`)\n    }\n  }\n\n  private subscribeOnItemClick() {\n    this.menuService.onItemClick()\n      .pipe(\n        takeWhile(() => this.alive),\n        filter(({ tag }) => tag === this.tag),\n      )\n      .subscribe(() => this.hide());\n  }\n}\n"]}