{"version":3,"file":"overlay-container.js","sourceRoot":"","sources":["../../../../../../.ng_build/theme/components/cdk/overlay/overlay-container.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EACL,SAAS,EACT,wBAAwB,EAGxB,WAAW,EACX,QAAQ,EACR,KAAK,EACL,gBAAgB,GACjB,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAChD,OAAO,EAAqB,gBAAgB,EAAoB,MAAM,WAAW,CAAC;AAElF;IAAA;IAsBA,CAAC;IAlBC,sBAAI,sCAAG;aAAP;YACE,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,GAAG,CAAA;QACzC,CAAC;;;OAAA;IAGD,sBAAI,wCAAK;aAAT;YACE,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,KAAK,CAAA;QAC3C,CAAC;;;OAAA;IAGD,sBAAI,yCAAM;aAAV;YACE,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,MAAM,CAAA;QAC5C,CAAC;;;OAAA;IAGD,sBAAI,uCAAI;aAAR;YACE,OAAO,IAAI,CAAC,QAAQ,KAAK,UAAU,CAAC,IAAI,CAAA;QAC1C,CAAC;;;OAAA;IApBQ;QAAR,KAAK,EAAE;;2DAAsB;IAG9B;QADC,WAAW,CAAC,sBAAsB,CAAC;;;oDAGnC;IAGD;QADC,WAAW,CAAC,wBAAwB,CAAC;;;sDAGrC;IAGD;QADC,WAAW,CAAC,yBAAyB,CAAC;;;uDAGtC;IAGD;QADC,WAAW,CAAC,uBAAuB,CAAC;;;qDAGpC;IACH,4BAAC;CAAA,AAtBD,IAsBC;SAtBqB,qBAAqB;AA+B3C;IAGE,qCAAsB,GAAqB,EAAY,QAAkB;QAAnD,QAAG,GAAH,GAAG,CAAkB;QAAY,aAAQ,GAAR,QAAQ,CAAU;IACzE,CAAC;IAED,sBAAI,wDAAe;aAAnB;YACE,OAAO,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IAED,2DAAqB,GAArB,UAAyB,MAA4B;QACnD,IAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,uBAAuB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACrE,IAAM,QAAQ,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACtD,OAAO,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IAC3D,CAAC;IAED,0DAAoB,GAApB,UAAwB,MAA2B;QACjD,OAAO,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IACzE,CAAC;IAED,yDAAmB,GAAnB,UAAoB,OAAe;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IAES,yDAAmB,GAA7B,UAA8B,GAA6B;QACzD,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,OAAO,CAAC;YACrD,CAAC,wBAAwB,EAAE,GAAG,CAAC;SAChC,CAAC,CAAC,CAAC;IACN,CAAC;IA5BU,2BAA2B;QANvC,SAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,QAAQ,EAAE,0FAET;SACF,CAAC;yCAI2B,gBAAgB,EAAsB,QAAQ;OAH9D,2BAA2B,CA6BvC;IAAD,kCAAC;CAAA,AA7BD,IA6BC;SA7BY,2BAA2B","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ComponentRef,\n  EmbeddedViewRef,\n  HostBinding,\n  Injector,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { NbPosition } from './overlay-position';\nimport { NbComponentPortal, NbPortalInjector, NbTemplatePortal } from './mapping';\n\nexport abstract class NbPositionedContainer {\n  @Input() position: NbPosition;\n\n  @HostBinding('class.nb-overlay-top')\n  get top(): boolean {\n    return this.position === NbPosition.TOP\n  }\n\n  @HostBinding('class.nb-overlay-right')\n  get right(): boolean {\n    return this.position === NbPosition.RIGHT\n  }\n\n  @HostBinding('class.nb-overlay-bottom')\n  get bottom(): boolean {\n    return this.position === NbPosition.BOTTOM\n  }\n\n  @HostBinding('class.nb-overlay-left')\n  get left(): boolean {\n    return this.position === NbPosition.LEFT\n  }\n}\n\n\n@Component({\n  selector: 'nb-overlay-container',\n  template: `\n    <div *ngIf=\"isStringContent\" class=\"primitive-overlay\">{{ content }}</div>\n  `,\n})\nexport class NbOverlayContainerComponent {\n  content: string;\n\n  constructor(protected vcr: ViewContainerRef, protected injector: Injector) {\n  }\n\n  get isStringContent(): boolean {\n    return !!this.content;\n  }\n\n  attachComponentPortal<T>(portal: NbComponentPortal<T>): ComponentRef<T> {\n    const factory = portal.cfr.resolveComponentFactory(portal.component);\n    const injector = this.createChildInjector(portal.cfr);\n    return this.vcr.createComponent(factory, null, injector);\n  }\n\n  attachTemplatePortal<C>(portal: NbTemplatePortal<C>): EmbeddedViewRef<C> {\n    return this.vcr.createEmbeddedView(portal.templateRef, portal.context);\n  }\n\n  attachStringContent(content: string) {\n    this.content = content;\n  }\n\n  protected createChildInjector(cfr: ComponentFactoryResolver): NbPortalInjector {\n    return new NbPortalInjector(this.injector, new WeakMap([\n      [ComponentFactoryResolver, cfr],\n    ]));\n  }\n}\n"]}